image: node:10

stages:
  - build_project
  - build_image
  - k8s_deploy

.build_project: &BUILD_PROJECT
  stage: build_project
  script:
    - cd src
    - npm config set registry https://repos.saybot.net/repository/alo7npm/
    - npm install
    - npm run build
  artifacts:
    name: chromeExtension-dist
    expire_in: 2 day
    paths:
      - src/dist

build_alpha_project:
  <<: *BUILD_PROJECT
  environment:
    name: alpha
  only:
    - dev

build_beta_project:
  <<: *BUILD_PROJECT
  environment:
    name: beta
  only:
    - beta

build_staging_project:
  <<: *BUILD_PROJECT
  environment:
    name: staging
  only:
    - staging

build_production_project:
  <<: *BUILD_PROJECT
  environment:
    name: production
  only:
    - master

variables:
  IMAGE_PER_BRANCH_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_BUILD_REF
  DOCKER_DRIVER: overlay2
  IMAGE_PER_BRANCH: $CI_REGISTRY_IMAGE/$CI_BUILD_REF_NAME:latest

.docker: &DOCKER
  image: docker:latest
  services:
    - name: docker:18-dind
      command: ["--registry-mirror", "https://ixceb9no.mirror.aliyuncs.com"]
  before_script:
    - echo "nameserver 114.114.114.114" >> /etc/resolv.conf
    - echo "nameserver 8.8.8.8" >> /etc/resolv.conf
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  tags:
    - docker
  except:
    - tags

.docker_build: &DOCKER_BUILD
  <<: *DOCKER
  stage: build_image
  script:
    - rm -rf src/.eslintrc.js
    - rm -rf src/chrome-extension
    - rm -rf src/tsconfig.json
    - rm -rf src/webpack.config.js
    - echo $IMAGE_PER_BRANCH_COMMIT
    - docker pull $IMAGE_PER_BRANCH || true
    - docker build --pull --cache-from $IMAGE_PER_BRANCH -t $IMAGE_PER_BRANCH_COMMIT -t $IMAGE_PER_BRANCH --build-arg CI_COMMIT_SHORT_SHA --build-arg MAX_REPEAT -f Dockerfile .
    - docker push $IMAGE_PER_BRANCH_COMMIT
    - docker push $IMAGE_PER_BRANCH
  retry: 2

docker_build_alpha:
  <<: *DOCKER_BUILD
  dependencies:
    - build_alpha_project
  environment:
    name: alpha
  only:
    - dev

docker_build_beta:
  <<: *DOCKER_BUILD
  dependencies:
    - build_beta_project
  environment:
    name: beta
  only:
    - beta

docker_build_staging:
  <<: *DOCKER_BUILD
  dependencies:
    - build_staging_project
  environment:
    name: staging
  only:
    - staging

docker_build_production:
  <<: *DOCKER_BUILD
  dependencies:
    - build_production_project
  environment:
    name: production
  only:
    - master
